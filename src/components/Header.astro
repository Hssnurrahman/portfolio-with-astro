---

const navItems = [
  { href: "#home", label: "Home" },
  { href: "#skills", label: "Skills" },
  { href: "#projects", label: "Projects" },
  { href: "#about", label: "About" },
  { href: "#contact", label: "Contact" },
];
---

<header class="header-animated fixed top-0 left-0 right-0 z-50 bg-white/80 dark:bg-gray-950/80 backdrop-blur-2xl border-b border-gray-200/20 dark:border-gray-700/20 transition-all duration-500 shadow-sm">
  <div class="max-w-7xl mx-auto px-6 py-4 flex items-center justify-between">
    <!-- Enhanced Logo -->
    <div class="logo-container flex items-center group cursor-pointer flex-shrink-0">
      <div class="logo-icon relative">
        <div class="absolute inset-0 bg-gradient-to-r from-primary-500 via-secondary-500 to-accent-500 rounded-xl blur-md opacity-50 group-hover:opacity-70 transition-opacity duration-300"></div>
        <div class="relative w-10 h-10 rounded-xl bg-gradient-to-br from-primary-600 via-secondary-600 to-accent-600 flex items-center justify-center shadow-lg hover:scale-105 transition-transform duration-300">
          <span class="text-white font-bold text-lg tracking-wide">H</span>
        </div>
      </div>
      <div class="logo-text-container ml-3 hidden sm:block">
        <span class="logo-name text-xl font-bold bg-gradient-to-r from-primary-600 via-secondary-600 to-accent-600 bg-clip-text text-transparent">
          Hassan
        </span>
        <div class="logo-subtitle text-xs text-gray-500 dark:text-gray-400 font-medium">Full Stack Developer</div>
      </div>
    </div>

    <!-- Enhanced Navigation -->
    <nav class="nav-container hidden lg:flex flex-1 justify-center mx-8">
      <ul class="nav-list flex items-center space-x-1 bg-white/60 dark:bg-gray-800/60 backdrop-blur-xl rounded-2xl px-2 py-2 border border-gray-200/30 dark:border-gray-600/30 shadow-lg">
        {navItems.map((item) => (
            <li class="nav-item">
              <a
                  href={item.href}
                  class="nav-link relative px-4 py-2.5 text-gray-600 dark:text-gray-300 font-medium text-sm transition-colors duration-300 rounded-xl hover:text-primary-600 dark:hover:text-primary-400 hover:bg-white/70 dark:hover:bg-gray-700/70 block"
              >
                <span class="relative z-10">{item.label}</span>
              </a>
            </li>
        ))}
      </ul>
    </nav>

    <!-- Enhanced CTA Button -->
    <div class="header-actions flex items-center space-x-3 flex-shrink-0">
      <a href="#contact" class="cta-button relative group px-6 py-2.5 bg-gradient-to-r from-primary-600 via-secondary-600 to-accent-600 text-white rounded-xl font-semibold text-sm transition-all duration-300 hover:shadow-lg hover:shadow-primary-500/20 hover:scale-105 overflow-hidden">
        <div class="absolute inset-0 bg-gradient-to-r from-primary-700 via-secondary-700 to-accent-700 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        <span class="relative z-10 flex items-center gap-2">
          Let's Connect
          <svg class="w-4 h-4 group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </span>
      </a>
      
      <!-- Enhanced Mobile Menu Button -->
      <button class="mobile-menu-btn lg:hidden w-9 h-9 rounded-lg bg-white/70 dark:bg-gray-800/70 backdrop-blur-xl flex items-center justify-center border border-gray-200/30 dark:border-gray-600/30 hover:scale-105 transition-all duration-300 shadow-sm">
        <svg class="hamburger-icon w-4 h-4 text-gray-600 dark:text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>
  </div>
</header>

<!-- Enhanced Styles and Animations -->
<style>
  @keyframes fadeInDown {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes pulseGlow {
    0%, 100% {
      opacity: 0.6;
      transform: scale(1);
    }
    50% {
      opacity: 0.8;
      transform: scale(1.05);
    }
  }

  @keyframes gradientShift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  @keyframes typewriter {
    from { width: 0; }
    to { width: 100%; }
  }

  @keyframes logoFloat {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-3px);
    }
  }

  @keyframes navItemSlide {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes headerReveal {
    from {
      opacity: 0;
      transform: translateY(-100%);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Header Animation */
  .header-animated {
    animation: headerReveal 0.6s ease-out;
  }

  /* Logo Animations */
  .logo-container {
    animation: slideInLeft 0.8s ease-out;
  }

  .logo-icon {
    animation: logoFloat 3s ease-in-out infinite;
  }

  .pulse-glow {
    animation: pulseGlow 2s ease-in-out infinite;
  }

  .logo-text {
    transition: all 0.3s ease;
  }

  .logo-container:hover .logo-text {
    transform: scale(1.1);
  }

  .gradient-text {
    background: linear-gradient(-45deg, #6366f1, #8b5cf6, #ec4899, #f59e0b);
    background-size: 400% 400%;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradientShift 3s ease infinite;
  }

  .logo-name {
    animation: slideInLeft 0.6s ease-out 0.2s both;
  }

  .logo-subtitle {
    animation: slideInLeft 0.6s ease-out 0.4s both;
  }

  /* Navigation Animations */
  .nav-container {
    animation: fadeInDown 0.8s ease-out 0.3s both;
  }

  .nav-item {
    animation: navItemSlide 0.4s ease-out both;
  }

  .nav-link {
    position: relative;
    overflow: hidden;
  }


  /* Header Actions Animation */
  .header-actions {
    animation: slideInRight 0.8s ease-out 0.5s both;
  }

  .cta-button {
    position: relative;
    overflow: hidden;
  }

  .cta-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transition: left 0.6s;
  }

  .cta-button:hover::before {
    left: 100%;
  }

  /* Mobile Menu Button */
  .mobile-menu-btn:hover .hamburger-icon {
    transform: rotate(90deg);
  }

  /* Scroll Effects */
  .header-scrolled {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(20px);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }

  .dark .header-scrolled {
    background: rgba(17, 24, 39, 0.9);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  }

  /* Interactive Elements */

  /* Responsive Adjustments */
  @media (max-width: 1024px) {
    .nav-container {
      display: none;
    }
  }

  /* Active Navigation State */
  .nav-link.active {
    color: #6366f1;
    background: rgba(99, 102, 241, 0.1);
  }

  .dark .nav-link.active {
    color: #818cf8;
  }
</style>

<!-- JavaScript for Interactive Effects -->
<script>
  // Header scroll effect
  function handleScroll(): void {
    const header = document.querySelector('.header-animated') as HTMLElement | null;
    if (!header) return;
    
    const scrolled = window.scrollY > 50;
    
    if (scrolled) {
      header.classList.add('header-scrolled');
    } else {
      header.classList.remove('header-scrolled');
    }
  }

  // Active navigation state
  function updateActiveNav(): void {
    const sections = document.querySelectorAll('section[id]');
    const navLinks = document.querySelectorAll('.nav-link');
    
    sections.forEach(section => {
      const htmlSection = section as HTMLElement;
      const sectionTop = htmlSection.offsetTop - 100;
      const sectionHeight = htmlSection.offsetHeight;
      const scrollPosition = window.scrollY;
      
      if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
        const sectionId = section.getAttribute('id');
        
        navLinks.forEach(link => {
          link.classList.remove('active');
          const href = link.getAttribute('href');
          if (href && href === `#${sectionId}`) {
            link.classList.add('active');
          }
        });
      }
    });
  }

  // Smooth scrolling for navigation links
  function initSmoothScroll(): void {
    const navLinks = document.querySelectorAll('.nav-link');
    
    navLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const href = link.getAttribute('href');
        if (!href) return;
        
        const targetId = href.substring(1);
        const targetSection = document.getElementById(targetId);
        
        if (targetSection) {
          targetSection.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });
  }

  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    initSmoothScroll();
    updateActiveNav();
  });

  // Listen for scroll events
  window.addEventListener('scroll', () => {
    handleScroll();
    updateActiveNav();
  });

  // Mobile menu functionality (placeholder)
  const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
  if (mobileMenuBtn) {
    mobileMenuBtn.addEventListener('click', () => {
      // Add mobile menu logic here
      console.log('Mobile menu clicked');
    });
  }
</script>

<!-- Dark mode toggle (commented out)
<script>
<!--  const darkModeToggle = document.getElementById('darkModeToggle');-->
<!--  const html = document.documentElement;-->

<!--  function toggleDarkMode() {-->
<!--    html.classList.toggle('dark');-->
<!--    const isDark = html.classList.contains('dark');-->
<!--    localStorage.setItem('darkMode', isDark);-->
<!--    updateIcon();-->
<!--  }-->

<!--  function updateIcon() {-->
<!--    const isDark = html.classList.contains('dark');-->
<!--    darkModeToggle.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 ${isDark ? 'text-gray-300' : 'text-gray-700'}" viewBox="0 0 24 24">-->
<!--      ${isDark-->
<!--        ? '<path fill="currentColor" d="M12 7a5 5 0 0 1 5 5a5 5 0 0 1-5 5a5 5 0 0 1-5-5a5 5 0 0 1 5-5m0 2a3 3 0 0 0-3 3a3 3 0 0 0 3 3a3 3 0 0 0 3-3a3 3 0 0 0-3-3m0-7l2.39 3.42C13.65 5.15 12.84 5 12 5c-.84 0-1.65.15-2.39.42L12 2M3.34 7l4.16-.35A7.2 7.2 0 0 0 5.94 8.5c-.44.74-.69 1.5-.83 2.29L3.34 7m.02 10l1.76-3.77a7.131 7.131 0 0 0 2.38 4.14L3.36 17M20.65 7l-1.77 3.79a7.023 7.023 0 0 0-2.38-4.15l4.15.36m-.01 10l-4.14.36c.59-.51 1.12-1.14 1.54-1.86c.42-.73.69-1.5.83-2.29L20.64 17M12 22l-2.41-3.44c.74.27 1.55.44 2.41.44c.82 0 1.63-.17 2.37-.44L12 22z"/>'-->
<!--        : '<path fill="currentColor" d="M12 21q-3.75 0-6.375-2.625T3 12q0-3.75 2.625-6.375T12 3q.35 0 .688.025t.662.075q-1.025.725-1.638 1.888T11.1 7.5q0 2.25 1.575 3.825T16.5 12.9q1.375 0 2.525-.613T20.9 10.65q.05.325.075.662T21 12q0 3.75-2.625 6.375T12 21Z"/>'-->
<!--    }-->
<!--    </svg>`;-->
<!--  }-->

<!--  // Check for saved dark mode preference or use system preference-->
<!--  const savedDarkMode = localStorage.getItem('darkMode');-->

<!--  if (savedDarkMode === 'true' || (!savedDarkMode && window.matchMedia('(prefers-color-scheme: dark)').matches)) {-->
<!--    html.classList.add('dark');-->
<!--  }-->

<!--  updateIcon();-->

<!--  darkModeToggle.addEventListener('click', toggleDarkMode);-->
</script>
-->